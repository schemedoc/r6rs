Formal comment #182 (enhancement)

Port predicates (New predicates wanted for different subtypes of ports)
Reported by: 	John Cowan
Version:	5.92

Currently R5.92RS has input-port? and output-port? and binary-port? I
propose adding textual-port?, input/output-port?, file-port?,
string-port?, and bytevector-port? with the obvious semantics.

A textual-port? predicate would be technically redundant, as by the
letter of R5.92RS all non-binary ports are textual; however, a
particular implementation might add ports which were neither binary
nor (in the general sense) textual, with new input or output
operations.

DRAFT RESPONSE:

****************************************************************

Will sees no problem with adding textual-port?.

Will doesn't see much need for input/output-port?, since it
computes the obvious conjunction, but has no objection to
adding it.

Will has no objection to adding the file-port? procedure, but
does not see any real need for it, since file ports don't have
any standard operations except for those that are common to all
ports.

Will thought the same comment would apply for string-port? and
bytevector-port?, but then he realized that you have to close
those ports differently from ordinary ports, which means the
proposed string-port? and bytevector-port? would serve a real
purpose.  (The argument for string-port? and bytevector-port?
would remain even if Will's favored interface for those ports
were adopted.)

Adding string-port? and bytevector-port? would make it
impractical to implement string and bytevector ports using just
make-custom-binary-input-port and make-custom-binary-output-port,
but we shouldn't do the Wrong Thing just to hide the limitations
of our design.

****************************************************************
