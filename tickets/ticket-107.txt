Formal comment #107 (defect)

Scheme should not be changed to be case sensitive
Reported by:	Arthur A. Gleckler

Component:	lexicalsyntax
Version:	5.91

In <3.2. Lexical syntax>: Scheme should not be case sensitive. After
thirty years, what new argument came up to justify this change? Does
this mean that (eq? 'symbol 'SYMBOL) ==> #f ? This means that years of
tradition of writing quoted symbols in upper case in macros for
clarity will end and that lots of existing code will have to be
painstakingly pored over and fixed with no clear benefit.

RESPONSE:

Many technical arguments exist in favor of both case sensitivity and
case insensitivity, and any attempt to list them all here would be
incomplete.  What is relevant here is that switching to case
sensitivity will break backwards compatibility, and might set a
precedent for switching a technically more or less arbitrary decision
again in the future.

The editors decided to switch to case sensitivity because they
perceived that a significant majority of the Scheme community favored
the change.  This perception has been strengthened by polls at the
2004 Scheme workshop, on the plt-scheme mailing list, and the
r6rs-discuss mailing list.

The possibility that some implementations may support #! prefixes,
like the #!r6rs prefix, to identify code that is to be interpreted as
case insensitive may be mentioned in a non-normative appendix,
along with a possible syntax for the prefixes.
