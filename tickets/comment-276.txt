Subject: Rationale 15.1
From: Andre van Tonder
Date: Wed, 27 Jun 2007 11:06:32 -0400 (EDT)

Submitted by : Andre van Tonder
Section      : Rationale 15.1
Priority     : Apparently high (based on reaction in this list)

Summary:
--------

Objection to Rationale 15.1.

Resubmitted as formal comment on advice from an editor
because it would override a previous formal comment.

Description:
------------

- (15.1) "Therefore, the parent clause only accepts other
  record types defined using the syntactic layer." - I do not think
  the argument given implies the necessity of the "therefore", since
  an implementation can determine for itself whether the parent
  has been defined via the syntactic layer and optimize or not based
  on that determination.  More seriously, I think
  this restriction impedes modularity - changing
  a definition from syntactic to procedural in some library
  may break dependent libraries even if no properties of the
  record type (other than the mode of definition) has been changed.
  In fact, the mode of definition becomes an extra property of the
  data type, so the "syntactic layer" is not really a "layer" but
  introduces new things.


RESPONSE:

There are actually two issues here: (1) whether it's possible to
define a syntactic record type whose parent record type is defined
via the procedural layer, and (2) whether the parent can be
specified in a way that is independent of the mode of definition
(syntactic or procedural) of the parent record type.  The first
issue has been addressed by the addition of a parent-rtd clause
that allows a syntactic record definition to specify a parent
defined by the procedural layer.  The second has, unfortunately,
not been addressed.
