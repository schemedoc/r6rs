August 8 2006 12:45-2:15pm  812-856-3600, PIN 001386#

0. finalize agenda (1 minute)

1. action items from 8/1/2006 (5 minutes)
   - email Richard, marc, Manuel re: editorial credit (Kent)
   - propose alternate script syntax (Anton)
   - revise library and syntax srfis (Kent)
   - draft safety (memory integrity) paragraphs (Will)
   - carried over:
     - complete unicode reference implementation (Will)
   - note: reserve last week of August for proofreading

2. Report status (5 minutes)
   - items ready for review
     <item>                    <editor>   <to be completed by>   <done?>
     unicode                   Matthew    Aug. 03
     exceptions & conditions   Matthew    Aug. 03
     quasiquote                Kent       Aug. 08
     letrec*                   Kent       Aug. 08
     let-values & let*-values  Kent       Aug. 08
     records                   Kent       Aug. 08
     enumerations              Will       Jul. 12                done.
     bytes                     Will       Aug. 03
     equal?                    Will       Aug. 01
     list-library              Anton      Aug. 07
     case-lambda               Anton      Aug. 07
     when & unless             Anton      Aug. 07
     core/library split        Anton      Aug. 07
     arithmetic                ???        Aug. ??
     set-car!, set-cdr!        ???        Aug. ??
     condition-type details    ???        Aug. ??
   - items not ready for review
     syntax (read-syntax, syntactic forms)
     eval
     I/O
     hash tables
     safe/unsafe mode
     syntax-case
     library system
     scripts
     r5rs compatibility library
     operational semantics

3. future meetings (5 minutes)
   - Matthew is off to China next week

4. relaxation of script syntax (10 minutes)
   - treat script body as a library body?
     <script header>
     (import <import-spec>*)
     <library body>
     - requires (command-line) procedure
   - allow interleaved definitions and expressions?

5. syntax-case (15 minutes)
   - make fresh-syntax the default?
     - pros: reduces possibility of unintended intra-transformer capture
     - cons: complicates many common macros
             problematic interaction with quasisyntax
   - add abstract transformer syntax?
       (transformer (<variable>) <body>) => transformer
   - add quasisyntax/unsyntax/unsyntax-splicing?
     - can be written as a macro
   - should let-syntax/letrec-syntax treated like begin or let?
   - otherwise accept basically as is?

6. I/O convenience library (10 minutes)
   - naming of peek-char, write-char, etc.

7. I/O (15 minutes)

8. adjourn
