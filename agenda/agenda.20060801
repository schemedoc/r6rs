August 1 2006 12:45pm  812-856-3600, PIN 001386#

*** NOTE: Time may change to 2:15pm pending Mike's availability ***

0. finalize agenda (1 minute)

1. action items from 7/25/2006 (5 minutes)
   - write up I/O convenience library (Anton)
   - attempt to specify library-only safety solution (Kent and Will)
   - attempt to specify library/eval phasing syntax (Mike)
   - carried over:
     - update library srfi (Matthew and Kent)
       (pending phasing/naming decisions)
     - complete unicode reference implementation (Will)
     - comment on core/library split (All)

2. Report status (10 minutes)
   - items ready for review
     <item>                    <editor>   <completed by>
     unicode                   Matthew    Aug. ??
     exceptions & conditions   Matthew    Aug. ??
     quasiquote                Kent       Aug. ??
     letrec*                   Kent       Aug. ??
     let-values & let*-values  Kent       Aug. ??
     records                   Kent       Aug. ??
     enumerations              Will       Aug. ??
     bytes                     Will       Aug. ??
     equal?                    Will       Aug. ??
     list-library              Anton      Aug. ??
     case-lambda               Anton      Aug. ??
     when & unless             Anton      Aug. ??
     core/library split        Anton      Aug. ??
   - items not ready for review
     syntax (read-syntax, syntactic forms)
     eval
     I/O
     arithmetic
     set-car!, set-cdr!
     condition-type details
     hash tables
     safe/unsafe mode
     syntax-case
     library system
     scripts
     r5rs compatibility library
     operational semantics

3. R6RS header material (5 minutes)

4. library phasing (10 minutes)
   - two options on the table:
     Model 1: library invoked once per run
      - simpler, easier to implement
      - can lead to accidental sharing of library state between
        compilation and run time of a library
      - works with current library syntax and eval specification
     Model 2: library invoked once per phase
      - more complex, harder to implement
      - prevents accidental sharing of library state between compilation
        and run time of a library
      - requires a richer import-phase specification and some eval
        exprssion syntax for specifying import phases
   - see https://r6rs.scheming.org/node/307
   - see https://r6rs.scheming.org/node/313#comment-1629 and followup(s)

5. library naming (5 minutes)
   - see https://r6rs.scheming.org/node/246

6. safe/unsafe mode (10 minutes)
   - vote between Proposals 0, 1, 2, and 3
   - see draft/safety/safety.txt, draft/safety/safety2.txt
   - see also extensive email discussion

7. adjourn
