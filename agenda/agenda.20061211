December 11 2006 8:00am-9:00am EDT 812-856-3600, PIN 001386#

0. finalize agenda (1 minute)

1. action items (1 minute)
   - look over numeric proposal (All)
   - find and characterize (let () ---) examples (Will and Kent)
   - split routine tickets into own files (Mike)
   - comprehensive library phasing proposal, include characterization of
     the nature of allowable implementations (Matthew)
   - finish recording draft responses in svn tickets directory (All)
   - update #136 response to note that no top level is specified and that
     implementations who supply one (and probably most will) can provide
     a mechanism, possibly through imports, for addressing this comment (Kent)
   - update response to rationalize the various iteration procedures [78] (Anton)
     - flush hash-table-fold
     - add hash-table->vector
     - vector-for-each, vector-map (same interface as for-each and map)
     - call/cc can be used for premature termination
     - (vector-map p (hash-table->vector ht)) and
       (vector-for-each p (hash-table->vector ht)) can be recognized by
       optimizer if implementor feels optimization is useful
     - problem: how does hash-table->vector return both keys and values?
   - follow up with steering committee re: front page (Kent)
   - insert readability and other guiding principles from
     status reports into draft R6RS (Mike)

2. should we flush compound library names?
   - ticket 84
   - proposal in response: keep compound names
   - may need better rationale

3. record-type-length procedure
   - ticket 72

4. syntax-rules issues
   - tickets 111: syntax-rules should evaluate to a transformer
   - tickets 113: fenders should be dropped from syntax-rules
   - tickets 114: identifier macros with syntax-rules
   - summary of proposed response: Agreed:
     - make syntax-rules evaluate to a transformer
     - drop fenders from syntax-rules
     - allow _ (unparenthesized) pattern for syntax-rules
     - add make-variable-transformer to base library

5. reduce overspecification as well as underspecification
   - ticket 87
   - need a concrete proposal

6. revisiting list operation exception-raising requirements
   - tickets 26, 42, 41, 36, 48, 49
   - need a concrete proposal

7. rationalize hash-table/vector/list procedures
   - ticket 78
   - concrete proposal pending

8. enumerations
   - ticket 70

9. expansion process
   - tickets 61, 62

10. port/transcoder changes
   - ticket 88

11. should bodies be more widely permitted?
   - ticket 117
   - leave begin alone but use "implicit let" (i.e., body) instead of
     "implicit begin" in case, cond, when, unless, etc.?

12. library phasing
   - tickets 92, 109, 110, 112, 123
   - need concrete proposal

13. multiple versions of one library
   - ticket 130

14. adjourn
