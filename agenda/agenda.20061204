December 4 2006 8:00am-9:00am EDT 812-856-3600, PIN 001386#

0. finalize agenda (1 minute)

1. action items (1 minute)
   - split the report into base and libraries (Mike)
   - email steering committee re: front page (Kent)
   - insert readability and other guiding principles from
     status reports into draft R6RS (Mike)
   - update responses to script comments [106, 105, 106] (Anton)
     - based on Anton's email proposal w/preservation of
       command-line-arguments (possibly as command-line) and
       restriction that multiple definitions of an identifier
       are not allowed; see also 2006/11/27 minutes
     - move to "done, probably uncontroversial (critical/yellow)"
     - technical vote next Monday
   - update responses to declaration comments [128, 64, 77, 60] (Will)
     - declarations are flushed along with claim re: providing way for
       programmers to say checks aren't desired, though mention likelihood
       that some implementations will provide a mechanism for doing so in
       "real world" appendix; safety guarantee holds
     - move to "done, probably uncontroversial (critical/yellow)"
     - technical vote next Monday
   - update response to backslash-linefeed [9] (Matthew)
     - yes, change to \<intraline whitespace><linefeed><intraline whitespace>
     - also means flushing \<space> (can use %20;)
     - close (no need for another technical vote)
   - update response to condition hierarchy [95] (Mike)
     - flush &defect
     - move to "done, probably uncontroversial (critical/yellow)"
     - close (no need for another technical vote)
   - update response to script-body differences [39] (Anton)
     - reject
     - rationale in 2006/11/27 minutes
     - close (no need for another technical vote)
   - close "Scheme should not be changed to be case sensitive [107] (Mike)
     - current response is okay
     - close (no need for another technical vote)
   - update response to rationalize the various iteration procedures [78] (Anton)
     - flush hash-table-fold
     - add hash-table->vector
     - vector-for-each, vector-map (same interface as for-each and map)
     - call/cc can be used for premature termination
     - (vector-map p (hash-table->vector ht)) and
       (vector-for-each p (hash-table->vector ht)) can be recognized by
       optimizer if implementor feels optimization is useful
     - move to "done, probably uncontroversial (critical/yellow)"
     - technical vote next week
   - note: tickets 1-3 are test tickets and can be ignored
   - note: tickets 135 and up came in after 2006/11/15 and can be deferred

2. technical vote on done, probably uncontroversial (critical/yellow) tickets
   - ticket numbers: 9 17 38 39 51 63 64 65 70 77 78 79 83 91 96 97 104
     105 106 107 128 131 136

3. straw poll on suggested response/action, but needs discussion (major/white) tickets (5 minutes)
   - ticket numbers: 69 71 75 84 86 111 113 114 117 130
     18 28 58 66 72 108 138

4. Continued discussion of controversial issues (remaining time)
   - ground rules: prefer to debate concrete proposals
   - nomination for items to discuss first (some possibilties below, grouped)
   - #26: Map and for-each should work even if lists are of unequal length
     #25: "forall" and "exists" should use SRFI-1 equivalents
     #42: Requirement to detect circular lists
     #41: Plausible lists presentation defect
     #36: Ambiguous call/cc-behaviour of list operations
     #45: last-element behavior of for-each
     #48: Slight defect in plausible alist description
     #49: Higher-order procedures should not interfere with exceptions
     #87: Reduce over-specification as well as under-specification
     #130: Multiple versions of one library should be linkable
   - #52: Exact-Integer and Real (and Complex) are more useful
          distinctions than Exact and Inexact
     #40: Exactness is orthogonal to type
     #27: Some generic arithmetic procedures should be put in a library
     Proposal: flush exact-only, inexact-only, and fixnum (but not
               fx) libraries
   - #61: Expansion process violates lexical scoping
     #62: Lexical scoping violation for internal define-syntax.
   - #84: Eliminate compound library names
   - #87: Reduce over-specification as well as under-specification
   - #89: Leave readers and writers out of the report
   - #123: Replacing the import's "for" syntax with implicit phasing
     #92: Phase semantics
     #109: identifier-syntax is not a derived form
     #110: Remove double phase semantics
     #112: Lexical determination of phases
   - #117: Bodies should be more widely permitted
   - #126: local imports
   - #130: Multiple versions of one library should be linkable

5. adjourn
