conference call March 8 2006 12:46pm EST
Kent, Anton, Matthew, Mike, Will

0. finalize agenda (1 minute)

1. action items from 3/1/2006 (5 minutes)
   - no new action items
   - carried over:
     - post note re: van Tonder syntax-case differences (Matthew)
     - read exception, byte-vector, and I/O SRFIs (Anton, Kent, Matthew, Will)
     - draft hash-table proposal (Anton, Will)
     - draft syntax-case SRFI (Kent)

2. multiple-value binding construct (5-10 minutes)
   - should we consider mvlet / mvlet*?
        okay
   - if not, are we ready to vote between options #1 and #4?
        option 1: mvlet and mvlet* names; no "values" in patterns
        option 4: let and let* names; "values" in patterns
        Mike and Will like semantics of #4 with mvlet and mvlet* names;
        Kent doesn't like that combination, but should let us vote on it.

3. equal? (5-10 minutes)
   - should we adopt Will's equiv? semantics for equal?
        mike: no
        matthew: no
        anton: abstain
        will: a good thing to leave for R7RS
   - should we define equal? on records?
        behavior of equal on records was not discussed

4. status reports (5 minutes each, 15 minutes total)
   - arithmetic
        general agreement on large issues, controversy on details
        write R6RS as though all systems support IEEE-754, but
            allow systems to raise &implementation-restriction
            exceptions when they can't represent an infinity or NaN
        fixnums and flonums to be in libraries
   - safe/unsafe mode (declarations)
        Kent wants some portable, reasonably detailed semantics
        Will says a portable syntax is already valuable so you
            can express your general priorities without having
            to rewrite all declarations when you port to another
            system
   - exceptions
        people who haven't read SRFI 34 and 35 need to do so
        Mike will send out summary of proposed changes to those SRFIs
        vote next week

5. unicode requirements (10 minutes)
    Should we require all of the Unicode stuff from SRFI 76?
        Follow example of full numeric tower, but don't be
        so apologetic about it.  Allow implementations to
        raise &implementation-restriction exceptions if
        they can't represent a character or string they
        need to represent.  Mention the ASCII subset as
        reasonable, or sanction an ASCII level of R6RS
        conformance.  If some implementors wants to build
        some subset that's in between ASCII and the full
        SRFI 76 spec, then let them worry how to do it.
    ISO Latin-1 isn't closed under normalization

Items to discuss next week:
    split between core and libraries
        Anton will post something
    io
        see action items

6. adjourned 1:28pm EST
